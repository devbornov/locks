"""
Django settings for locksmith project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+jv$tbmdt@b%p6@wq&)($#v9gi8fv4&8vw%1(f^xfxy#+wg_kj'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*','127.0.0.1','13.237.77.42','lockquick.com.au']



# Application definition

INSTALLED_APPS = [
    'daphne',
    'corsheaders',
    'django.contrib.sites',  # âœ… REQUIRED for allauth
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'api',
    'rest_framework_simplejwt',
    'rest_framework.authtoken',
    'django_otp.plugins.otp_totp',
    'rest_framework_simplejwt.token_blacklist',
    'channels',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',  # This handles social authentication
    'allauth.socialaccount.providers.google',  # Google OAuth
    'allauth.socialaccount.providers.facebook',  # Facebook OAuth
    'dj_rest_auth',
    'dj_rest_auth.registration',
    
]

# # Required setting for django.contrib.sites
SITE_ID = 1




# Channels Redis Configuration
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],  # Ensure Redis is running
        },
    },
}

import os
GDAL_LIBRARY_PATH = os.environ.get('GDAL_LIBRARY_PATH', 'C:/path/to/gdal306.dll')

import os

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # Use JWT for authentication
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',  # Require authentication for all endpoints
    ],
}



SIMPLE_JWT = {
   'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),  # Adjust as needed
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    "ROTATE_REFRESH_TOKENS": True,  
    "BLACKLIST_AFTER_ROTATION": True, 
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'AUTH_HEADER_TYPES': ('Bearer',),
}


AUTH_USER_MODEL = 'api.User'



MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', 
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    # Required for allauth
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'locksmith.urls'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Ensure templates directory is set
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'locksmith.wsgi.application'


STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

DATA_UPLOAD_MAX_MEMORY_SIZE = 10485760  # 10 MB
FILE_UPLOAD_MAX_MEMORY_SIZE = 10485760

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'locksmith1',
#         'USER': 'root',
#         'PASSWORD': 'root',
#         'HOST': 'localhost',  # This matches the name of the db service in docker-compose.yml
#         'PORT': '3308',
#     }
# }


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'locksmith1',
        'USER': 'root',
        'PASSWORD': 'Db@2025#Lockquick',
        'HOST': 'localhost',  # Change for RDS
        'PORT': '3306',  # Default MySQL port
    }
}




# REST_FRAMEWORK = {
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.AllowAny',  # Allow access to anyone
#     ]
# }
# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Australia/Sydney'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'




ASGI_APPLICATION = "locksmith.asgi.application"




CORS_ALLOW_ALL_ORIGINS = True


CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://localhost:3001",
    "https://lockquick.com.au",
]

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
    "http://localhost:3001",
    "https://lockquick.com.au",
]

# CORS_ALLOWED_ORIGIN_REGEXES = [
#     r"^http://localhost:\d+$",
# ]

# CSRF_TRUSTED_ORIGINS = [
#     "http://localhost:3000",
#     "http://localhost:3001",
#     "http://localhost:3002",
# ]




import stripe


STRIPE_PUBLISHABLE_KEY = "pk_live_51QzDGvINNfIXkCoQFIOc731xjuQPLtiN0v2PDi56ydjN4Xjmeek1lB0AF0xaa8HksoxJtWthma0Wf2chSOkaga6a00x6wVAHfm"
STRIPE_SECRET_KEY = "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"
# STRIPE_PUBLISHABLE_KEY = "pk_test_51QzDGvINNfIXkCoQzIsOgudci6Ilp9p2cEUeGQD7vtzmFYpip0GaZxbSl4feFyXpIqwWWFOTipTKxs11O2WNW66U0083Dieamo"
# STRIPE_SECRET_KEY = "sk_test_51QzDGvINNfIXkCoQxQZQJACH5uITNMuyaBC9e6myoWw7p3lFZAIXHd9guZATi5RSKTIOZr0gOeaOrtNJNjAx3qvv00WjtFxREn"
# Set up Stripe API key globally
stripe.api_key = STRIPE_SECRET_KEY


EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


# import os
# import django

# os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'locksmithbackend.settings')
# django.setup()




# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'contact@lockquick.com.au'  # Replace with your Gmail
# EMAIL_HOST_PASSWORD = 'tdpj cknd mwws fgmb'  # Replace with your App Password
# DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'mail.lockquick.com.au'
EMAIL_PORT = 465  # Use SSL port as per the given settings
EMAIL_USE_SSL = True  # SSL is required for port 465
EMAIL_USE_TLS = False  # TLS should be False since SSL is being used
EMAIL_HOST_USER = 'contact@lockquick.com.au'  # Replace with your email
EMAIL_HOST_PASSWORD = 'w4dbqH5waUWUCAx'  # Replace with your actual password
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


DEFAULT_ADMIN_EMAIL = "contact@lockquick.com.au"         # change to actual admin email
DEFAULT_FROM_EMAIL = "noreply@example.com"        # change to verified sender email



STRIPE_WEBHOOK_SECRET = "whsec_yGpinjZRvqwxO0bFUYFO43YkWXslOBXF"
# STRIPE_WEBHOOK_SECRET = "whsec_qybAt6OdcP3osUHznayFa5Mxxno0ICHi"
# STRIPE_WEBHOOK_SECRET = "whsec_873d05a458aad835c4eeb1ebc7bdf471c6bcc8c1071a1d3c7ae4797e605e20a7"






AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # Default backend
    'allauth.account.auth_backends.AuthenticationBackend',  # Required for social login
)



REST_USE_JWT = True
JWT_AUTH_COOKIE = 'access'
JWT_AUTH_REFRESH_COOKIE = 'refresh'

ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
SOCIALACCOUNT_QUERY_EMAIL = True
ACCOUNT_AUTHENTICATION_METHOD = 'email'

SITE_URL = "https://lockquick.com.au"
FRONTEND_URL = "https://lockquick.com.au/accounts/google/login/callback/"
SOCIAL_AUTH_GOOGLE_CALLBACK_URL = FRONTEND_URL

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': '936017161429-4igasmus02gf9p9hmutb9tir1ma91a30.apps.googleusercontent.com',
            'secret': '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',
            'key': ''
        }
    },
   
}



SOCIAL_AUTH_GOOGLE_CALLBACK_URL = "https://lockquick.com.au/accounts/google/login/callback/"



SOCIALACCOUNT_ADAPTER = 'api.adapters.MySocialAccountAdapter'

GOOGLE_MAPS_API_KEY = 'AIzaSyBEHlAVb2PxzZs6UAPRCqkG2GOfVkApnj8'







LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '[{levelname}] {asctime} {name} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'email_debug.log',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
        },
        'locksmith.api': {  # replace with your actual app path
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}